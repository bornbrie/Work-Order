From dd608db1358930608ee54f8401b6eda1bc997097 Mon Sep 17 00:00:00 2001
From: Pulkit Singhal <pulkit@shoppinpal.com>
Date: Sun, 9 Oct 2016 14:11:17 -0500
Subject: [PATCH] retry requests on ETIMEDOUT

---
 vend.js | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/vend.js b/vend.js
index 4413d1c..18e368d 100644
--- a/vend.js
+++ b/vend.js
@@ -22,6 +22,10 @@ function AuthZError(e) {
 function ClientError(e) {
   return e.statusCode >= 400 && e.statusCode < 500;
 }
+
+function ConnectError(e) { // TODO: maybe leverage https://github.com/petkaantonov/core-error-predicates#connecterror
+  return e.code === 'ETIMEDOUT';
+}
 /* jshint ignore:end */
 
 var successHandler = function(response) {
@@ -49,6 +53,22 @@ var successHandler = function(response) {
   }
 };
 
+var retryWhenConnectionFails = function(args, connectionInfo, callback, retryCounter) {
+  if(retryCounter<3) {
+    var retryAfter = (retryCounter+1)*1000; // will wait for 1, 2, 3 seconds successively
+    log.debug('retryWhenConnectionFails', 'retry after: ' + retryAfter + ' ms');
+
+    return Promise.delay(retryAfter)
+        .then(function() {
+          log.debug('retryWhenConnectionFails', retryAfter + ' ms have passed...');
+          return callback(args, connectionInfo, ++retryCounter);
+        });
+  }
+  else {
+    return Promise.reject('failed to connect, even after multiple retries');
+  }
+};
+
 /**
  * TODO: Should we reuse the following library instead of rolling our own implementation here?
  *       https://github.com/you21979/node-limit-request-promise
@@ -125,6 +145,11 @@ var sendRequest = function(options, args, connectionInfo, callback, retryCounter
   }
   return request(options)
     .then(successHandler)
+    .catch(ConnectError, function(e) {// jshint ignore:line
+      log.error('A ConnectError happened: \n' + e);
+      return retryWhenConnectionFails(args, connectionInfo, callback, retryCounter);
+      // TODO: how to prevent a throw or rejection from also stepping thru the other catch-blocks?
+    })
     .catch(RateLimitingError, function(e) {// jshint ignore:line
       log.error('A RateLimitingError error like "429 Too Many Requests" happened: \n'
           + 'statusCode: ' + e.statusCode + '\n'
-- 
2.8.1

